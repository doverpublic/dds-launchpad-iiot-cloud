Changes on 2018-07-17
========================================================================================
1- Eliminated all those .cmd and other linux commmand files with the same name
It seems the application can start and works the same
Khader- please try to see if this will correct the issue with the Excel Service because now we don't 
have the commands in the root that seems to be the cause of the app starting problem

2- I have changed the Express application to work with HTTPS
We have good news and bad news
It seems that now we can work on HTTPS for both the login and after login (good news)
The bad news is that the redirection coming back to the app to /admin/TrailerCompany/view fails with a 404
However if we redirect (manually) the application to / (root) then it will continue to work with HTTPS
and somehow from the Root it will go back and then works fine with /admin/TrailerCompany/view and any other
uri's of the application (including the API url/uri)
Khader- can you work on this aspect to figure out why we have such a problem getting control back in the
application after the B2C login? (I am wondering if we should probably always redirecting from B2C to root)
We can always go back and figure out what is going on.

3- Some additional comments related to #1 above
It is not guaranteed that we will have all those pesky .cmd files reappering when we do a new module install
At this point we asserted that we can work without those files present in the TargetSolutionUI root directory 
Later we will to continue to investigate how to make it stop - it seems that it started to happen in nodejs
recently - I have found very little reference how to resolve the issue - the few solutions I saw seems that
do not make a lot of sense
Khader- this is going to annoy us and we will have to continue to investigate about it - right now we those
other issues that are more urgent - however if you have any chance let's start investigating it.





Changes on 2018-07-17
========================================================================================

1- TargetSolutionUI/angular.json
	Lines 24 - 26 - added
              "src/config.json",
              "src/privacy.pdf",
              "src/terms.pdf"
	Lines 30 - 32 - added
			  "node_modules/bootstrap/dist/css/bootstrap.min.css",
			    "node_modules/font-awesome/css/font-awesome.css",
                 "node_modules/ngx-toastr/toastr.css"
	Line 34 - changed
		From- 	  "scripts": []
	    To-       "scripts": ["node_modules/jquery/dist/jquery.min.js","node_modules/popper.js/dist/umd/popper.min.js","node_modules/bootstrap/dist/js/bootstrap.js"]

		
2- TargetSolutionUI/package.json	
	Added dependencies:
	    "@agm/core": "^1.0.0-beta.3",
		"@ng-bootstrap/ng-bootstrap": "^2.2.0",
		"@types/lodash": "^4.14.110",
		"bootstrap": "^4.1.1",
		"core-js": "^2.5.4",
		"file-saver": "^1.3.8",
		"font-awesome": "^4.7.0",
		"jquery": "^3.3.1",
		"lodash": "^4.17.10",
		"msal": "^0.1.7",
		"ngx-bootstrap": "^3.0.1",
		"ngx-order-pipe": "^2.0.1",
		"ngx-toastr": "^8.8.0",
		"popper.js": "^1.14.3",		
		"rxjs-compat": "^6.2.1",
		"xlsx": "^0.13.1",

3- TargetSolutionUI/src/config.json
	Added as new file
	
4- TargetSolutionUI/src/index.html
	Changed line #5
		From- <title>TargetSolutionUI</title>
		To- <title>CivaconAssetManagement</title>
		
5- TargetSolutionUI/src/privacy.pdf
	Added as a new file
	
6- TargetSolutionUI/src/styles.scss
	Added new lines
	
	@import './app/shared/styles/variable-styles.scss';

	@import './app/shared/styles/common-styles.scss';

7- TargetSolutionUI/src/terms.pdf
	Added as a new file
	
	
8- TargetSolutionUI/src/assets directory
	Added files- (why we needs those files in two places???)
		config.json
		privacy.pdf
		terms.pdf 
	
	Added directories- (discuss final locations for the contents)
		images
		data

9- TargetSolutionUI/src/app/app.component.css
	Added lines
	.adminButton
	{
		border-radius: 25px;
	}

10- TargetSolutionUI/src/app/app.component.html
	Replaced placeholder content with;
	
	<span *ngIf="service.isOnline()">

		<app-header></app-header>

		<div class="col-lg-12" style="margin-bottom: 50px">

			<router-outlet></router-outlet>

		</div>
		<app-footer></app-footer>

	</span>

11- TargetSolutionUI/src/app/app.component.spec.ts
	Changed line #25
		From- expect(compiled.querySelector('h1').textContent).toContain('Welcome to TargetSolutionUI!');
		To- expect(compiled.querySelector('h1').textContent).toContain('Welcome to app!');

12- TargetSolutionUI/src/app/app.component.ts
	Added lines 2 - 6
	import * as $ from 'jquery';
	importÂ *Â asÂ _Â fromÂ "lodash";
	import { MSALService} from './shared/services/msal.service';
	import { Router } from '@angular/router';
	import { setTheme } from 'ngx-bootstrap/utils';

	Added lines 15 - 30
	  constructor(private router: Router, public service: MSALService){
        setTheme('bs4'); // or 'bs4'
      
	  }
	  ngOnInit()
	  {
		if(this.service.isOnline()) {
		  this.router.navigate(['']);
	  }else {
		console.log("login");
		  this.service.login();
	  }
	   
		
	  }


13- TargetSolutionUI/src/app/app.module.ts
	Replaced the placeholder file with current Civacon file
	(Discuss and review content)

	
14- TargetSolutionUI/src/app directory
	Added new files
		app.config.ts (review and discuss content)
		cities.ts (review and discuss content)
		country.ts (review and discuss content)
		state.ts (review and discuss content)
		Timezone.ts (review and discuss content)

	Added new directories- (review and discuss content)
		administration
		alerts
		assetmanagement
		assets
		config
		dashboard
		dispatchoffice
		drivers
		footer
		header
		home
		livetracking
		locations
		pagenotfound
		reports
		shared
		tile
		trailercompany
		users
		
15- Adjusments to make it to run
	Copy the browserslist file to the TargetSolutionUI directory
	Create a copy of the file with name browserslist-touse because every time we install a node_modules
	the system will create a new browserslist file with the offending line - (see browserslist-installed)
	After any module install we need to copy back the browswerlist file from the touse version
	
	The excel-service is not loading correctly and break the application startup
	I have commented out the loading of the excel-service and any code references to it in the codebase
	
	The application is starting - however I cannot use it becasue it will try to redirect to port 8080
	We need to figure out what needs to be done to correct it and still use https with port 20300
	
	